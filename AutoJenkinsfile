pipeline {

    agent any

    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(daysToKeepStr: '15', numToKeepStr: '5'))
    }

    triggers {
        gitlab(triggerOnPush: true, branchFilterType: 'All')
    }

    tools {
        nodejs "nodejs-14.15.0"
    }

    stages {
        stage('Dependencies') {
            options {
                timeout(time: 20, unit: 'MINUTES')
            }
            steps {
                script {
                    def packageJson = readJSON file: 'package.json'
                    echo packageJson.name
                    echo packageJson.version
                    echo packageJson.description
                }
                sh 'node -v'
                sh 'npm --version'
                sh 'npm install'
            }
        }

        stage('Build') {
            options {
                timeout(time: 10, unit: 'MINUTES')
            }
            steps {
                sh 'npm run build'
                zip dir: 'dist', zipFile: 'agora-front-AUTO-SNAPSHOT-bin.zip', archive: true
            }
        }
    }

    post {
        unsuccessful {
            script {
                def commitMessage = sh (script: 'git log -1 --pretty=%B', returnStdout: true).trim()
                def commitAuthor = sh (script: 'git log -1 --pretty=%aN', returnStdout: true).trim()
                def commitEmail = sh (script: 'git log -1 --pretty=%aE', returnStdout: true).trim()
                def commitHash = sh (script: 'git log -1 --pretty=%h', returnStdout: true).trim()

                mail subject: "${currentBuild.currentResult}: ${env.JOB_BASE_NAME}/${env.BRANCH_NAME}#${env.BUILD_NUMBER}",
                        from: 'Jenkins <jenkins@luxhub.com>',
                        to: commitEmail,
                        mimeType: 'text/html',
                        body: """
                            <html><body>
                            <h1>Job ${env.JOB_BASE_NAME}: ${currentBuild.currentResult}</h1>
                            <p>This is the build <strong>#${env.BUILD_NUMBER}</strong> on branch
                                <strong>${env.BRANCH_NAME}</strong> run by the job <strong>${env.JOB_NAME}</strong>.</p>
                            <p>Please <a href="${env.BUILD_URL}console">check the job execution log here</a>.</p>
                            <hr/>
                            <p>Commit <strong>${commitHash}</strong> by <strong>${commitAuthor}</strong>: </p>
                            <pre>${commitMessage}</pre>
                            </body></html>
                          """
            }
        }
        always {
            deleteDir()
        }
    }
}
